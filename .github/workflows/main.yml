name: Main CI/CD - On push and pull requests

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Testing Application
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        node-version: [12.x, 14.x]
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check exists cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Running Lint
        run: yarn lint

      - name: Running Tests
        run: yarn test:ci

      - name: Building Application
        id: build
        run: yarn build
  
  deploy:
    name: Deploying Application
    needs: [setup]    
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check exists cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: git config
        run: |
          git config user.name occamengenharia
          git config user.email occamengenharia@gmail.com
        
      - name: Create .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Deploy NPM
        run: yarn release --ci
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
